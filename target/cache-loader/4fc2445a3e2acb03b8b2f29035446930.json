{"remainingRequest":"/Users/linqi/IdeaProjects/jiuzhangquanzhanke/node_modules/thread-loader/dist/cjs.js??ref--10-2!/Users/linqi/IdeaProjects/jiuzhangquanzhanke/node_modules/ts-loader/index.js??ref--10-3!/Users/linqi/IdeaProjects/jiuzhangquanzhanke/node_modules/angular-router-loader/src/index.js!/Users/linqi/IdeaProjects/jiuzhangquanzhanke/node_modules/tslint-loader/index.js!/Users/linqi/IdeaProjects/jiuzhangquanzhanke/src/main/webapp/app/shared/service/CourseService.ts","dependencies":[{"path":"/Users/linqi/IdeaProjects/jiuzhangquanzhanke/src/main/webapp/app/shared/service/CourseService.ts","mtime":1566169433409},{"path":"/Users/linqi/IdeaProjects/jiuzhangquanzhanke/node_modules/angular2-template-loader/index.js","mtime":1564932081920},{"path":"/Users/linqi/IdeaProjects/jiuzhangquanzhanke/node_modules/cache-loader/dist/cjs.js","mtime":1564932084188},{"path":"/Users/linqi/IdeaProjects/jiuzhangquanzhanke/node_modules/thread-loader/dist/cjs.js","mtime":1564932092752},{"path":"/Users/linqi/IdeaProjects/jiuzhangquanzhanke/node_modules/ts-loader/index.js","mtime":1564932092883},{"path":"/Users/linqi/IdeaProjects/jiuzhangquanzhanke/node_modules/angular-router-loader/src/index.js","mtime":1564932081858},{"path":"/Users/linqi/IdeaProjects/jiuzhangquanzhanke/node_modules/tslint-loader/index.js","mtime":1564932093085}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar http_1 = require(\"@angular/common/http\");\nvar app_constants_1 = require(\"app/app.constants\");\nvar CourseService = /** @class */ (function () {\n    function CourseService(http) {\n        this.http = http;\n        this.courseAddressUrl = app_constants_1.SERVER_API_URL + '/api/course/findAllCoursesDto';\n        this.courseAddressWithTNUrl = app_constants_1.SERVER_API_URL + '/api/course/findAllCoursesWithTNDto';\n        this.courseDeleteUrl = app_constants_1.SERVER_API_URL + '/api/course/deleteCourse';\n        this.courseUpdateUrl = app_constants_1.SERVER_API_URL + '/api/course/updateCourse';\n        this.courseRegisterUrl = app_constants_1.SERVER_API_URL + '/api/course/registerCourse';\n        this.courseUnRegisterUrl = app_constants_1.SERVER_API_URL + '/api/course/unRegisterCourse';\n        this.courseAddUrl = app_constants_1.SERVER_API_URL + '/api/course/addCourse';\n        this.findTeacherIdUrl = app_constants_1.SERVER_API_URL + '/api/user/findId';\n    }\n    CourseService.prototype.getCourseInfo = function () {\n        return this.http.get(\"\" + this.courseAddressUrl);\n    };\n    CourseService.prototype.getEnrolledCourseInfoWithTN = function () {\n        return this.http.get(\"\" + this.courseAddressWithTNUrl);\n    };\n    CourseService.prototype.delete = function (courseName) {\n        debugger;\n        return this.http.delete(this.courseDeleteUrl + \"/\" + courseName);\n    };\n    CourseService.prototype.update = function (course) {\n        return this.http.put(this.courseUpdateUrl, course);\n    };\n    CourseService.prototype.registerCourse = function (courseName) {\n        // debugger;\n        var res = this.http.post(this.courseRegisterUrl + \"/\" + courseName, courseName);\n        console.log(res);\n        return res;\n    };\n    CourseService.prototype.unRegisterCourse = function (courseName) {\n        return this.http.delete(this.courseUnRegisterUrl + \"/\" + courseName);\n    };\n    CourseService.prototype.findTeacherId = function () {\n        return this.http.get(\"\" + this.findTeacherIdUrl);\n    };\n    CourseService.prototype.findCourseById = function (id) {\n        return this.http.get(this.courseAddressWithTNUrl + \"/\" + id);\n    };\n    CourseService.prototype.getCourseInfoWithTN = function (id) {\n        return this.http.get(this.courseAddressWithTNUrl + \"/\" + id);\n    };\n    CourseService.prototype.addCourse = function (course) {\n        return this.http.post(\"\" + this.courseAddUrl, course);\n    };\n    CourseService = tslib_1.__decorate([\n        core_1.Injectable(),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof http_1.HttpClient !== \"undefined\" && http_1.HttpClient) === \"function\" && _a || Object])\n    ], CourseService);\n    return CourseService;\n    var _a;\n}());\nexports.CourseService = CourseService;\n",{"version":3,"file":"/Users/linqi/IdeaProjects/jiuzhangquanzhanke/src/main/webapp/app/shared/service/CourseService.ts","sourceRoot":"","sources":["/Users/linqi/IdeaProjects/jiuzhangquanzhanke/node_modules/angular-router-loader/src/index.js!/Users/linqi/IdeaProjects/jiuzhangquanzhanke/node_modules/tslint-loader/index.js!/Users/linqi/IdeaProjects/jiuzhangquanzhanke/src/main/webapp/app/shared/service/CourseService.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAC3C,6CAAkD;AAGlD,mDAAmD;AAInD;IAUI,uBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAT5B,qBAAgB,GAAG,8BAAc,GAAG,+BAA+B,CAAC;QACpE,2BAAsB,GAAG,8BAAc,GAAG,qCAAqC,CAAC;QAChF,oBAAe,GAAG,8BAAc,GAAG,0BAA0B,CAAC;QAC9D,oBAAe,GAAG,8BAAc,GAAG,0BAA0B,CAAC;QAC9D,sBAAiB,GAAG,8BAAc,GAAG,4BAA4B,CAAC;QAClE,wBAAmB,GAAG,8BAAc,GAAG,8BAA8B,CAAC;QACtE,iBAAY,GAAG,8BAAc,GAAG,uBAAuB,CAAC;QACxD,qBAAgB,GAAG,8BAAc,GAAG,kBAAkB,CAAC;IAExB,CAAC;IAExC,qCAAa,GAAb;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,KAAG,IAAI,CAAC,gBAAkB,CAAC,CAAC;IAClE,CAAC;IAED,mDAA2B,GAA3B;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAoB,KAAG,IAAI,CAAC,sBAAwB,CAAC,CAAC;IAC9E,CAAC;IAGD,8BAAM,GAAN,UAAO,UAAkB;QACrB,QAAQ,CAAC;QACT,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAc,IAAI,CAAC,eAAe,SAAI,UAAY,CAAC,CAAC;IAC/E,CAAC;IAED,8BAAM,GAAN,UAAO,MAAiB;QACpB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,IAAI,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;IACjE,CAAC;IACD,sCAAc,GAAd,UAAe,UAAkB;QAC7B,YAAY;QACZ,IAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAc,IAAI,CAAC,iBAAiB,SAAI,UAAY,EAAE,UAAU,CAAC,CAAC;QAC5F,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,MAAM,CAAC,GAAG,CAAC;IACf,CAAC;IACD,wCAAgB,GAAhB,UAAiB,UAAkB;QAC/B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAc,IAAI,CAAC,mBAAmB,SAAI,UAAY,CAAC,CAAC;IACnF,CAAC;IAED,qCAAa,GAAb;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,KAAG,IAAI,CAAC,gBAAkB,CAAC,CAAA;IAC5D,CAAC;IACD,sCAAc,GAAd,UAAe,EAAU;QACrB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAuB,IAAI,CAAC,sBAAsB,SAAI,EAAI,CAAC,CAAA;IACnF,CAAC;IACD,2CAAmB,GAAnB,UAAoB,EAAU;QAC1B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAuB,IAAI,CAAC,sBAAsB,SAAI,EAAI,CAAC,CAAC;IACpF,CAAC;IACD,iCAAS,GAAT,UAAU,MAAiB;QACvB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAW,KAAG,IAAI,CAAC,YAAc,EAAE,MAAM,CAAC,CAAC;IACpE,CAAC;IAlDQ,aAAa;QADzB,iBAAU,EAAE;qEAWiB,iBAAU,oBAAV,iBAAU;OAV3B,aAAa,CAmDzB;IAAD,oBAAC;;CAAA,AAnDD,IAmDC;AAnDY,sCAAa","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { CourseDto } from 'app/shared/model/course-dto.model';\nimport { SERVER_API_URL } from 'app/app.constants';\nimport { CourseWithTNDto } from 'app/shared/model/courseWithTN-dto.model';\n\n@Injectable()\nexport class CourseService {\n    private courseAddressUrl = SERVER_API_URL + '/api/course/findAllCoursesDto';\n    private courseAddressWithTNUrl = SERVER_API_URL + '/api/course/findAllCoursesWithTNDto';\n    private courseDeleteUrl = SERVER_API_URL + '/api/course/deleteCourse';\n    private courseUpdateUrl = SERVER_API_URL + '/api/course/updateCourse';\n    private courseRegisterUrl = SERVER_API_URL + '/api/course/registerCourse';\n    private courseUnRegisterUrl = SERVER_API_URL + '/api/course/unRegisterCourse';\n    private courseAddUrl = SERVER_API_URL + '/api/course/addCourse';\n    private findTeacherIdUrl = SERVER_API_URL + '/api/user/findId';\n\n    constructor(private http: HttpClient) {}\n\n    getCourseInfo(): Observable<CourseDto[]> {\n        return this.http.get<CourseDto[]>(`${this.courseAddressUrl}`);\n    }\n\n    getEnrolledCourseInfoWithTN(): Observable<CourseWithTNDto[]> {\n        return this.http.get<CourseWithTNDto[]>(`${this.courseAddressWithTNUrl}`);\n    }\n\n\n    delete(courseName: String): Observable<Response> {\n        debugger;\n        return this.http.delete<Response>(`${this.courseDeleteUrl}/${courseName}`);\n    }\n\n    update(course: CourseDto): Observable<Response> {\n        return this.http.put<Response>(this.courseUpdateUrl, course);\n    }\n    registerCourse(courseName: String):Observable<Response> {\n        // debugger;\n        const res = this.http.post<Response>(`${this.courseRegisterUrl}/${courseName}`, courseName);\n        console.log(res);\n        return res;\n    }\n    unRegisterCourse(courseName: String): Observable<Response> {\n        return this.http.delete<Response>(`${this.courseUnRegisterUrl}/${courseName}`);\n    }\n\n    findTeacherId():Observable<String> {\n        return this.http.get<String>(`${this.findTeacherIdUrl}`)\n    }\n    findCourseById(id: String): Observable<CourseWithTNDto[]> {\n        return this.http.get<CourseWithTNDto[]>(`${this.courseAddressWithTNUrl}/${id}`)\n    }\n    getCourseInfoWithTN(id: String): Observable<CourseWithTNDto[]> {\n        return this.http.get<CourseWithTNDto[]>(`${this.courseAddressWithTNUrl}/${id}`);\n    }\n    addCourse(course: CourseDto): Observable<Response> {\n        return this.http.post<Response>(`${this.courseAddUrl}`, course);\n    }\n}\n"]}]}